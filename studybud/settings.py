"""
Django settings for studybud project.

Generated by 'django-admin startproject' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv   # <-- this line is missing
from django.utils.translation import gettext_lazy as _


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from .env file
load_dotenv(BASE_DIR / ".env")

LANGUAGE_CODE = 'en'  # default language
USE_I18N = True

LANGUAGES = [
    ('en', _('English')),
    ('da', _('Danish')),
    ('de', _('German')),
    ('fr', _('French')),
]

LOCALE_PATHS = [
    BASE_DIR / 'locale',
]



# === Stripe Configuration ===
# Toggle between test and live with STRIPE_MODE env var
STRIPE_MODE = os.getenv("STRIPE_MODE", "test")  # "test" or "live"

if STRIPE_MODE == "live":
    STRIPE_SECRET_KEY = os.getenv("STRIPE_SECRET_KEY")
    STRIPE_PUBLISHABLE_KEY = os.getenv("STRIPE_PUBLISHABLE_KEY")
    STRIPE_WEBHOOK_SECRET = os.getenv("STRIPE_WEBHOOK_SECRET")
else:
    STRIPE_SECRET_KEY = os.getenv("STRIPE_SECRET_KEY_TEST", "sk_test_xxx")
    STRIPE_PUBLISHABLE_KEY = os.getenv("STRIPE_PUBLISHABLE_KEY_TEST", "pk_test_xxx")
    STRIPE_WEBHOOK_SECRET = os.getenv("STRIPE_WEBHOOK_SECRET_TEST", "whsec_xxx")

# Redirects
STRIPE_SUCCESS_URL = os.getenv("STRIPE_SUCCESS_URL", "https://internstart.com/billing/success/")
STRIPE_CANCEL_URL = os.getenv("STRIPE_CANCEL_URL", "https://internstart.com/billing/cancel/")
STRIPE_PORTAL_RETURN_URL = os.getenv("STRIPE_PORTAL_RETURN_URL", "https://internstart.com/account/")



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3#av2c6nptlbbb6^muqkchu&fe3wv&n$t2+g$v!ir-f5%doocb'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


ALLOWED_HOSTS = [
    "internstart.com",
    "www.internstart.com",
    "167.99.242.34",  # server IP if needed
    "127.0.0.1",      # allow local dev
    "localhost",
]

SITE_URL = 'http://127.0.0.1:8000'  # dev

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'base.apps.BaseConfig',
    'rest_framework',
    "corsheaders",
    'widget_tweaks',
    'billing',


]

DEFAULT_EXPECTED_SALARY_DKK = "35000"


# --- Email / SendGrid ---
# --- Email / SendGrid ---
INSTALLED_APPS += ["anymail"]

EMAIL_BACKEND = "anymail.backends.sendgrid.EmailBackend"
ANYMAIL = {
    "SENDGRID_API_KEY": os.getenv("SENDGRID_API_KEY"),
}

DEFAULT_FROM_EMAIL = "Internstart <contact@internstart.com>"

# templates

CSRF_TRUSTED_ORIGINS = [
    "https://internstart.com",
    "https://www.internstart.com",
    "http://127.0.0.1:8000",  # allow local dev
    "http://localhost:8000",  # allow local dev
]


STRIPE_PUBLIC_KEY = os.getenv("STRIPE_PUBLIC_KEY") or os.getenv("STRIPE_PUBLISHABLE_KEY")
STRIPE_SECRET_KEY = os.getenv("STRIPE_SECRET_KEY")


# Redirects
# settings.py
LOGIN_URL = 'app_login'          # matches name="app_login" (your login route)
LOGIN_REDIRECT_URL = '/swipe/'   # the actual URL path
LOGOUT_REDIRECT_URL = '/'        # back to landing page


SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


SECURE_SSL_REDIRECT = False





if not DEBUG:
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
else:
    CSRF_COOKIE_SECURE = False
    SESSION_COOKIE_SECURE = False

# Ensure cookies are only sent over HTTPS


# Sometimes needed if you're using Nginx as reverse proxy
CSRF_COOKIE_SAMESITE = None


SITE_URL = "https://internstart.com/"

AUTH_USER_MODEL = 'base.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'base.middleware.RedirectLoggerMiddleware',
    'django.middleware.locale.LocaleMiddleware',

]


ROOT_URLCONF = 'studybud.urls'

 

OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'base.context_processors.global_connections',  # <-- Add this line
                'base.context_processors.stripe_public_key',
                'django.template.context_processors.i18n',

            ],
        },
    },
]

WSGI_APPLICATION = 'studybud.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql',
#        'NAME': 'your_db_name',
#        'USER': 'newuser',
#        'PASSWORD': 'yourpassword',
#        'HOST': 'localhost',
#        'PORT': '5432',
#    }
#}


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'newdb',
        'USER': 'newuser',
        'PASSWORD': 'newpassword',
        'HOST': 'localhost',
        'PORT': '',
    }
}




USE_TZ = True
# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators
 
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
# Static files (CSS, JavaScript, etc.)

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Static files (CSS, JS, app images)
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')



STATIC_ROOT = BASE_DIR/'static'
# New media setup for user uploads (resumes, avatars, etc.)
USER_MEDIA_URL = '/media/'                     # URL for user uploads
USER_MEDIA_ROOT = BASE_DIR / 'media'           # Directory on disk
# STATIC_ROOT =

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


CORS_ALLOW_ALL_ORIGINS = True
